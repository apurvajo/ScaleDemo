@{
    // Cache the image for a minute
    Response.OutputCache(120);

    var appSettings = System.Configuration.ConfigurationManager.AppSettings;
    var connectionStrings = System.Configuration.ConfigurationManager.ConnectionStrings;

    var dbRead = appSettings["dbRead"];

    var currentLocation = appSettings["siteName"];

    var storageConfig = connectionStrings[currentLocation].ConnectionString;

    var blob = appSettings["blobContainer"]; ;
    var queue = appSettings["queueName"]; ;

    var thisSite = new GalleryHelpers.SiteLocation(currentLocation, storageConfig, blob, queue);

    var aSH = new GalleryHelpers.azureStorageHelper(thisSite.storageAccount, thisSite.storageAccountKey);

    var galleryId = UrlData[0].AsInt();

    var database = WebMatrix.Data.Database.Open(dbRead);

    var gallery = database.QuerySingle("SELECT * FROM Galleries WHERE Id = @0", galleryId);
    if (gallery == null)
    {
        Response.SetStatus(HttpStatusCode.NotFound);
        return;
    }

    var photos = database.Query("SELECT TOP(5) primaryURI, UploadDate FROM Photos WHERE GalleryId = @0 ORDER BY UploadDate DESC", galleryId);
    if (photos.Count() == 0)
    {
        Response.Redirect("/Images/gallery-empty.png");
        return;
    }

    using (var generator = new MultiThumbnailGenerator())
    {
        foreach (var photo in photos)
        {
            generator.AddImage(aSH.blobThumbnail(photo.primaryURI, @thisSite.blobContainer));
        }
        using (var outStream = new System.IO.MemoryStream())
        {

            generator.WritePngToStream(outStream);
            var image = new WebImage(outStream);
            image.Write();
        }
    }
}